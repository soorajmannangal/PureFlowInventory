using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Text.RegularExpressions;
using System.Data;

namespace RRSoftwares
{
    /// <summary>
    /// Interaction logic for NewTransaction.xaml
    /// </summary>
    public partial class NewTransaction : Window
    {
        DBHelper dBHelper;
        int editTransId = 0;
        DataTable transTable;
        Home callerObject;
        public NewTransaction(int transId, DataTable dataTable, int rowIndex, Home obj)
        {
            InitializeComponent();
            dBHelper = new DBHelper();
            LoadCustomerCombo();
            LoadBranchCombo();
            LoadCategoryCombo();
            LoadProductCombo();
            dpDate.SelectedDate = DateTime.Now;
            InitModifyOperation(transId, dataTable, rowIndex);
            callerObject = obj;
        }

        void InitModifyOperation(int transId, DataTable dataTable, int rowIndex)
        {
            editTransId = transId;
            transTable = dataTable;
            if (editTransId != 0)
            {
                this.Title = "Modify Transaction";
                btnSubmit.Content = "Modify";
                cmbCustomer.Text = transTable.Rows[rowIndex].Field<string>("Customer");

                cmbBranch.Text = transTable.Rows[rowIndex].Field<string>("BranchName");
                cmbProductCategory.Text = transTable.Rows[rowIndex].Field<string>("ProductCategory");
                cmbProduct.Text = transTable.Rows[rowIndex].Field<string>("ProductName");
                dpDate.SelectedDate = DateTime.Parse ( transTable.Rows[rowIndex].Field<string>("TransactionDate"));
                txtLeafCount.Text = transTable.Rows[rowIndex].Field<string>("LeafCount");
                txtBookCount.Text = transTable.Rows[rowIndex].Field<int>("BookCount").ToString();
                txtAmount1.Text = transTable.Rows[rowIndex].Field<decimal>("Amount").ToString();
                TextRange textRange = new TextRange(txtDetails.Document.ContentStart, txtDetails.Document.ContentEnd);
                textRange.Text = transTable.Rows[rowIndex].Field<string>("Details").ToString();
            }
        }

        void LoadCustomerCombo()
        {
            cmbCustomer.ItemsSource = dBHelper.GetCustomerNames();
            cmbCustomer.SelectedIndex = 0;
        }

        void LoadBranchCombo()
        {
            cmbBranch.ItemsSource = dBHelper.GetBranchNames(cmbCustomer.SelectedItem.ToString());
            cmbBranch.SelectedIndex = 0;
        }
      
        private void NumberValidationTextBox(object sender, TextCompositionEventArgs e)
        {
            e.Handled = !int.TryParse(e.Text, out int x);
        }

        private void DecimalValidationTextBox(object sender, TextCompositionEventArgs e)
        {
            e.Handled = !decimal.TryParse(e.Text, out decimal x);
        }

        private void cmbCustomer_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            LoadBranchCombo();
        }

        void LoadCategoryCombo()
        {
            cmbProductCategory.ItemsSource = dBHelper.GetCategoryNames();
            cmbProductCategory.SelectedIndex = 0;
        }

        void LoadProductCombo()
        {
            cmbProduct.ItemsSource = dBHelper.GetProductNames(cmbProductCategory.SelectedItem.ToString());
            cmbProduct.SelectedIndex = 0;

            LoadProductDescription();
        }

        void LoadProductDescription()
        {
            string descr = cmbProduct.SelectedItem?.ToString() ?? "";
            lblProductDescription.Content = dBHelper.GetProductDescription(descr);           
        }

        private void cmbProductCategory_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            LoadProductCombo();
        }
        
        private void btnSubmit_Click(object sender, RoutedEventArgs e)
        {
            string customerName = cmbCustomer.SelectedItem.ToString();
            int customerId = dBHelper.GetCustomerID(customerName);
            string branchName = cmbBranch.SelectedItem.ToString();
            int branchId = dBHelper.GetBranchID(branchName);

            string catogaryName = cmbProductCategory.SelectedItem.ToString();
            int categoryId = dBHelper.GetCategoryID(catogaryName);
            string productName = cmbProduct.SelectedItem.ToString();
            int productId = dBHelper.GetProductID(productName);
            DateTime transDate = dpDate.SelectedDate.Value;
            int.TryParse(txtLeafCount.Text, out int lc);
            int leafCount = lc;
            int.TryParse(txtBookCount.Text, out int bc);
            int bookCount = bc;
            decimal.TryParse(txtAmount1.Text, out decimal amt);
            decimal amount = amt;
            string details = new TextRange(txtDetails.Document.ContentStart, txtDetails.Document.ContentEnd).Text;

            if (editTransId == 0)
            {              
               
                dBHelper.NewTransaction(branchId, customerId, categoryId, productId, transDate, leafCount, bookCount, amount, details);
                MessageBox.Show("Transaction added");
                ClearGui();
            }
            else  //Edit mode
            {
                dBHelper.UpdateTransaction(editTransId, branchId, customerId, categoryId, productId, transDate, leafCount, bookCount, amount, details);
                MessageBox.Show("Transaction Modified Successfully");
                this.Close();
            }
        }

        void ClearGui()
        {
            dpDate.SelectedDate = DateTime.Now;
            txtLeafCount.Text = "0";
            txtBookCount.Text = "0";
            txtAmount1.Text = "0.0";
            TextRange textRange = new TextRange(txtDetails.Document.ContentStart, txtDetails.Document.ContentEnd);
            textRange.Text = "";
        }

        private void txtLeafCount_PreviewTextInput(object sender, TextCompositionEventArgs e)
        {

        }

        private void Window_Closed(object sender, EventArgs e)
        {
            callerObject.IsEnabled = true;
            callerObject.UpdateTransGrid(true, 0, 0);
        }
    }
}
